//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Validation;
using System.Linq;
using System.Linq.Expressions;
using Application.Core.General;
using Application.Core.BaseClasses;
using Application.Core.EventBroker.Interfaces;

namespace Application.Biz.Data.EntityFramework
{
    public partial class DomainContext : DbContext, IDomainContext, IUseEventBroker
    {
        public DomainContext()
            : base("name=DomainEntities")
        {
    		// This allows .Include to be mocked out.
    		QueryableExtensions.Includer = new DbIncluder();
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public IDbSet<Application> Applications { get; set; }
        public IDbSet<Role> Roles { get; set; }
        public IDbSet<User> Users { get; set; }
        public IDbSet<AuditLog> AuditLogs { get; set; }
        public IDbSet<VisitStatus> VisitStatuses { get; set; }
        public IDbSet<ELMAHError> ELMAHErrors { get; set; }
    	
    	private class DbIncluder : QueryableExtensions.IIncluder
        {
            public IQueryable<T> Include<T, TProperty>(IQueryable<T> source, Expression<Func<T, TProperty>> path)
                where T : class
            {
                return DbExtensions.Include(source, path);
            }
        }		
    }
    
    public interface IDomainContext : IDomainContextBase 
    {
        IDbSet<Application> Applications { get; set; }
        IDbSet<Role> Roles { get; set; }
        IDbSet<User> Users { get; set; }
        IDbSet<AuditLog> AuditLogs { get; set; }
        IDbSet<VisitStatus> VisitStatuses { get; set; }
        IDbSet<ELMAHError> ELMAHErrors { get; set; }
    }
}
